name: Sync
# Utils => madhead/semver-utils@1.0.0
# Github Scripts => actions/github-script@v6.3.3
# Release => rez0n/actions-github-release@v1.8
# Sync => dabreadman/sync-upstream-repo@v1.3.0
#
# Links
#
# https://joht.github.io/johtizen/build/2022/01/20/github-actions-push-into-repository.html
# https://stackoverflow.com/questions/60963759/use-github-actions-to-create-a-tag-but-not-a-release
# https://octokit.github.io/rest.js/v19#actions
# https://stackoverflow.com/questions/23793062/can-forks-be-synced-automatically-in-github
# https://dev.to/n3wt0n/3-ways-to-sync-a-forked-repository-on-github-automatically-cfd
# https://github.com/nektos/act
# https://docs.github.com/en/actions/using-workflows/reusing-workflows
on:
  workflow_dispatch:
  # Once a week on Friday
  schedule:
    - cron: '0 0 * * 5'

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    outputs: 
      build: ${{ '>' == steps.version.outputs.comparison-result }}
      id: ${{format('{0}-a', steps.pt_r.outputs.release)}}
    steps: 
      - name: Sync and merge with upstream
        uses: dabreadman/sync-upstream-repo@v1.3.0
        with: 
          upstream_repo: "https://github.com/pterodactyl/panel.git"
          upstream_branch: "develop"
          downstream_branch: "develop"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch Pterodactyl Release
        uses: rez0n/actions-github-release@v1.8
        id: pt_r
        env: 
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "pterodactyl/panel"
          type: "stable"
      - name: Fetch Titanhosting Release
        uses: rez0n/actions-github-release@v1.8
        id: th_r
        env: 
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "VisualSource/pterodactyl-panel"
          type: "stable"
      - name: Test Versions
        uses: madhead/semver-utils@1.0.0
        id: version
        with:
          version: ${{steps.pt_r.outputs.release }}
          compare-to: ${{ steps.th_r.outputs.release}}    
      - name: Debug
        if: ${{ env.ACT }}
        run: |
          echo Pterodactyl Panel Version: ${{ steps.pt_r.outputs.release }} 
          echo Titanhosting Panel Version: ${{ steps.th_r.outputs.release }}
      - name: Code Checkout
        if: ${{ '>' == steps.version.outputs.comparison-result }}
        uses: actions/checkout@v3
      - name: Tag and push 
        if: ${{ '>' == steps.version.outputs.comparison-result }}
        env:
          TAG: ${{format('{0}-a', steps.pt_r.outputs.release)}}
        run: | 
            git config --local user.email "support@titanhosting.us"
            git config --local user.name "Titanhosting CI"
            echo Create Tag $TAG
            git tag $TAG
            echo push origin $TAG
            git push origin $TAG
      - name: Init Release
        if: ${{ '>' == steps.version.outputs.comparison-result }}
        uses: actions/github-script@v6.3.3
        env:
          TAG: ${{format('{0}-a', steps.pt_r.outputs.release)}}
        with:
          script: |
            const { TAG } = process.env;
            github.rest.actions.createWorkflowDispatch({
              owner: "VisualSource",
              repo: "pterodactyl-panel",
              workflow_id: "release.yaml",
              ref: TAG
            });


    










